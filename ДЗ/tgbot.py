import aiohttp
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from aiogram import F
import asyncio
import logging

# –í–∞—à–∏ —Ç–æ–∫–µ–Ω—ã
TELEGRAM_TOKEN = ""
OPENWEATHER_API_KEY = ""
OPENWEATHER_URL = "https://api.openweathermap.org/data/2.5/weather"

# –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()

async def fetch_weather(city: str):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ API OpenWeather."""
    params = {
        "q": city,
        "appid": OPENWEATHER_API_KEY,
        "units": "metric",
        "lang": "ru",
    }
    async with aiohttp.ClientSession() as session:
        async with session.get(OPENWEATHER_URL, params=params) as response:
            if response.status == 200:
                return await response.json()
            else:
                return None


@dp.message(Command(commands=["start", "help"]))
async def send_welcome(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã /start –∏ /help."""
    await message.reply(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–≥–æ–¥–Ω—ã–π –±–æ—Ç. –ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –æ –ø–æ–≥–æ–¥–µ. ‚òÅÔ∏è\n\n"
        "–ü—Ä–∏–º–µ—Ä: –ú–æ—Å–∫–≤–∞"
    )


@dp.message()
async def get_weather(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –≥–æ—Ä–æ–¥–æ–≤."""
    city = message.text.strip()
    await message.reply("‚è≥ –°–µ–π—á–∞—Å —É–∑–Ω–∞—é –ø–æ–≥–æ–¥—É, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...")

    weather_data = await fetch_weather(city)
    if weather_data:
        city_name = weather_data["name"]
        temp = weather_data["main"]["temp"]
        feels_like = weather_data["main"]["feels_like"]
        humidity = weather_data["main"]["humidity"]
        wind_speed = weather_data["wind"]["speed"]
        description = weather_data["weather"][0]["description"].capitalize()

        response = (
            f"üåç –ì–æ—Ä–æ–¥: {city_name}\n"
            f"üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n"
            f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n"
            f"üí® –í–µ—Ç–µ—Ä: {wind_speed} –º/—Å\n"
            f"‚òÅÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: {description}"
        )
    else:
        response = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è."

    await message.reply(response)


async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
